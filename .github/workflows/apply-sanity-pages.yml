name: Apply Sanity pages (auto PR)

on:
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write

jobs:
  apply:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Write files
        run: |
          mkdir -p src/lib
          mkdir -p src/routes/quiz/matchstick/article/[slug]/answer

          cat > src/lib/sanity.js <<'EOF'
          import { createClient } from '@sanity/client';
          import imageUrlBuilder from '@sanity/image-url';
          const projectId  = process.env.SANITY_PROJECT_ID;
          const dataset    = process.env.SANITY_DATASET || 'production';
          const apiVersion = process.env.SANITY_API_VERSION || '2023-05-03';
          const token      = process.env.SANITY_API_TOKEN;
          export const client = createClient({ projectId, dataset, apiVersion, useCdn:false, token, perspective:'published' });
          const builder = imageUrlBuilder(client);
          export const urlFor = (source) => builder.image(source);
          EOF

          cat > src/routes/+page.server.js <<'EOF'
          import { client } from '$lib/sanity.js';
          const QUERY = `
          *[_type=="quiz" && defined(slug.current)]{
            title, "slug": slug.current, mainImage, _updatedAt
          } | order(_updatedAt desc)[0..50]
          `;
          export async function load(){ const quizzes=await client.fetch(QUERY); return { quizzes }; }
          EOF

          cat > src/routes/+page.svelte <<'EOF'
          <script> export let data; import { urlFor } from '$lib/sanity.js'; </script>
          <h1 style="margin:16px 0;">脳トレ日和｜マッチ棒クイズ</h1>
          {#if !data.quizzes?.length}
            <p>まだクイズが投稿されていません。</p>
          {:else}
            <div style="display:grid;grid-template-columns:repeat(auto-fill,minmax(220px,1fr));gap:16px;">
              {#each data.quizzes as q}
                <a href={`/quiz/matchstick/article/${q.slug}`} style="display:block;text-decoration:none;border:1px solid #eee;border-radius:12px;overflow:hidden;background:#fff;">
                  <img src={q.mainImage ? urlFor(q.mainImage).width(600).height(360).fit('crop').url() : '/fallback.png'} alt={q.title} loading="lazy" style="width:100%;height:160px;object-fit:cover" />
                  <div style="padding:12px;"><h3 style="margin:0;font-size:16px;line-height:1.4;">{q.title}</h3></div>
                </a>
              {/each}
            </div>
          {/if}
          EOF

          mkdir -p "src/routes/quiz/matchstick/article/[slug]"
          cat > "src/routes/quiz/matchstick/article/[slug]/+page.server.js" <<'EOF'
          import { client } from '$lib/sanity.js';
          const QUERY = `
          *[_type=="quiz" && slug.current==$slug][0]{
            title, mainImage, problemDescription, hint, answerImage, answerExplanation, closingMessage
          }`;
          export async function load({ params }){ const doc=await client.fetch(QUERY,{slug:params.slug}); if(!doc) return {status:404,error:new Error('Not found')}; return { doc }; }
          EOF

          cat > "src/routes/quiz/matchstick/article/[slug]/+page.svelte" <<'EOF'
          <script> export let data; import { urlFor } from '$lib/sanity.js'; let showHint=false; </script>
          <a href="/" style="display:inline-block;margin:8px 0;">← TOPへ戻る</a>
          <h1 style="margin:8px 0 12px;">{data.doc.title}</h1>
          {#if data.doc.mainImage}<img src={urlFor(data.doc.mainImage).width(900).url()} alt={data.doc.title} style="width:100%;max-width:900px;border-radius:12px" />{/if}
          {#if data.doc.problemDescription}<p style="margin-top:12px;white-space:pre-wrap;">{data.doc.problemDescription}</p>{/if}
          <button on:click={() => (showHint=!showHint)} style="margin:12px 0;padding:8px 12px;border-radius:8px;border:1px solid #ccc;background:#f8f8f8;">{showHint ? 'ヒントを隠す' : 'ヒントを見る'}</button>
          {#if showHint && data.doc.hint}<div style="padding:12px;border:1px dashed #ccc;border-radius:8px;white-space:pre-wrap;">{data.doc.hint}</div>{/if}
          <p style="margin-top:20px;"><a href="./answer">→ 解答ページへ</a></p>
          EOF

          cat > "src/routes/quiz/matchstick/article/[slug]/answer/+page.server.js" <<'EOF'
          import { client } from '$lib/sanity.js';
          const QUERY = `*[_type=="quiz" && slug.current==$slug][0]{ title, answerImage, answerExplanation, closingMessage }`;
          export async function load({ params }){ const doc=await client.fetch(QUERY,{slug:params.slug}); if(!doc) return {status:404,error:new Error('Not found')}; return { doc }; }
          EOF

          cat > "src/routes/quiz/matchstick/article/[slug]/answer/+page.svelte" <<'EOF'
          <script> export let data; import { urlFor } from '$lib/sanity.js'; </script>
          <a href="../" style="display:inline-block;margin:8px 0;">← 問題へ戻る</a>
          <h1 style="margin:8px 0 12px;">{data.doc.title}｜解答</h1>
          {#if data.doc.answerImage}<img src={urlFor(data.doc.answerImage).width(900).url()} alt="解答画像" style="width:100%;max-width:900px;border-radius:12px" />{/if}
          {#if data.doc.answerExplanation}<h3>解説</h3><p style="white-space:pre-wrap;">{data.doc.answerExplanation}</p>{/if}
          {#if data.doc.closingMessage}<p style="margin-top:12px;white-space:pre-wrap;">{data.doc.closingMessage}</p>{/if}
          <p style="margin-top:20px;"><a href="/">← TOPへ</a></p>
          EOF

      - name: Create PR
        uses: peter-evans/create-pull-request@v6
        with:
          branch: chore/apply-sanity-pages
          title: "Apply Sanity pages (auto)"
          commit-message: "feat: add Sanity client & pages"
          body: "自動生成: TOP一覧・記事詳細・解答ページを追加します。"
          labels: enhancement
